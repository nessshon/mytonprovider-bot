"""initial schema

Revision ID: da34702342a0
Revises: 
Create Date: 2025-09-27 21:04:51.019608

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'da34702342a0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('providers',
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('pubkey', sa.String(length=64), nullable=False),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('uptime', sa.Float(), nullable=False),
    sa.Column('status_ratio', sa.Float(), nullable=True),
    sa.Column('working_time', sa.BigInteger(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('max_span', sa.BigInteger(), nullable=False),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('min_span', sa.BigInteger(), nullable=False),
    sa.Column('max_bag_size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('reg_time', sa.BigInteger(), nullable=False),
    sa.Column('is_send_telemetry', sa.Boolean(), nullable=False),
    sa.Column('telemetry', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('pubkey')
    )
    op.create_table('providers_history',
    sa.Column('archived_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('pubkey', sa.String(length=64), nullable=False),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('uptime', sa.Float(), nullable=False),
    sa.Column('status_ratio', sa.Float(), nullable=True),
    sa.Column('working_time', sa.BigInteger(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('max_span', sa.BigInteger(), nullable=False),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('min_span', sa.BigInteger(), nullable=False),
    sa.Column('max_bag_size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('reg_time', sa.BigInteger(), nullable=False),
    sa.Column('is_send_telemetry', sa.Boolean(), nullable=False),
    sa.Column('telemetry', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('archived_at', 'pubkey')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('language_code', sa.String(length=8), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('telemetry',
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.Column('bytes_recv', sa.BigInteger(), nullable=True),
    sa.Column('bytes_sent', sa.BigInteger(), nullable=True),
    sa.Column('cpu_info', sa.JSON(), nullable=True),
    sa.Column('disks_load', sa.JSON(), nullable=True),
    sa.Column('disks_load_percent', sa.JSON(), nullable=True),
    sa.Column('git_hashes', sa.JSON(), nullable=False),
    sa.Column('iops', sa.JSON(), nullable=True),
    sa.Column('net_load', sa.JSON(), nullable=True),
    sa.Column('net_recv', sa.JSON(), nullable=True),
    sa.Column('net_sent', sa.JSON(), nullable=True),
    sa.Column('pings', sa.JSON(), nullable=True),
    sa.Column('pps', sa.JSON(), nullable=True),
    sa.Column('ram', sa.JSON(), nullable=True),
    sa.Column('storage', sa.JSON(), nullable=False),
    sa.Column('swap', sa.JSON(), nullable=True),
    sa.Column('telemetry_pass', sa.String(), nullable=True),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.Column('uname', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['provider_pubkey'], ['providers.pubkey'], ),
    sa.PrimaryKeyConstraint('provider_pubkey')
    )
    op.create_table('telemetry_history',
    sa.Column('archived_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.Column('bytes_recv', sa.BigInteger(), nullable=True),
    sa.Column('bytes_sent', sa.BigInteger(), nullable=True),
    sa.Column('cpu_info', sa.JSON(), nullable=True),
    sa.Column('disks_load', sa.JSON(), nullable=True),
    sa.Column('disks_load_percent', sa.JSON(), nullable=True),
    sa.Column('git_hashes', sa.JSON(), nullable=False),
    sa.Column('iops', sa.JSON(), nullable=True),
    sa.Column('net_load', sa.JSON(), nullable=True),
    sa.Column('net_recv', sa.JSON(), nullable=True),
    sa.Column('net_sent', sa.JSON(), nullable=True),
    sa.Column('pings', sa.JSON(), nullable=True),
    sa.Column('pps', sa.JSON(), nullable=True),
    sa.Column('ram', sa.JSON(), nullable=True),
    sa.Column('storage', sa.JSON(), nullable=False),
    sa.Column('swap', sa.JSON(), nullable=True),
    sa.Column('telemetry_pass', sa.String(), nullable=True),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.Column('uname', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['provider_pubkey'], ['providers.pubkey'], ),
    sa.PrimaryKeyConstraint('archived_at', 'provider_pubkey')
    )
    op.create_table('users_alert_settings',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('types', sa.JSON(), nullable=False),
    sa.Column('thresholds_data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_alert_settings_enabled'), 'users_alert_settings', ['enabled'], unique=False)
    op.create_table('users_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.Column('telemetry_pass', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['provider_pubkey'], ['providers.pubkey'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_triggered_alerts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.Column('alert_type', sa.String(length=32), nullable=False),
    sa.Column('triggered_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['provider_pubkey'], ['providers.pubkey'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'provider_pubkey', 'alert_type', name='uq_user_provider_alert')
    )
    op.create_index(op.f('ix_users_triggered_alerts_alert_type'), 'users_triggered_alerts', ['alert_type'], unique=False)
    op.create_table('wallets',
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('last_lt', sa.BigInteger(), nullable=True),
    sa.Column('balance', sa.BigInteger(), nullable=False),
    sa.Column('earned', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['provider_pubkey'], ['providers.pubkey'], ),
    sa.PrimaryKeyConstraint('provider_pubkey')
    )
    op.create_table('wallets_history',
    sa.Column('archived_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('last_lt', sa.BigInteger(), nullable=True),
    sa.Column('balance', sa.BigInteger(), nullable=False),
    sa.Column('earned', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['provider_pubkey'], ['providers.pubkey'], ),
    sa.PrimaryKeyConstraint('archived_at', 'provider_pubkey')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wallets_history')
    op.drop_table('wallets')
    op.drop_index(op.f('ix_users_triggered_alerts_alert_type'), table_name='users_triggered_alerts')
    op.drop_table('users_triggered_alerts')
    op.drop_table('users_subscriptions')
    op.drop_index(op.f('ix_users_alert_settings_enabled'), table_name='users_alert_settings')
    op.drop_table('users_alert_settings')
    op.drop_table('telemetry_history')
    op.drop_table('telemetry')
    op.drop_table('users')
    op.drop_table('providers_history')
    op.drop_table('providers')
    # ### end Alembic commands ###
